<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.ohTravel.Search">

	<select id="yqTicketList" parameterType="TicketDTO" resultType="TicketDTO">
		Select td.ticket_id, ct.country_name, ct.country_id, c.city_name, c.city_id, ticket_name, ticket_adult_price, ti.ticket_rep_img_path, ti.ticket_detail_img_path, 
		 (SELECT basket_id FROM basket WHERE mem_id = #{mem_id} and basket_ref_id = td.ticket_id) chk
		FROM ticket_detail td 
		left join ticket_img ti on td.ticket_id = ti.ticket_id
		left join city c on c.city_id = td.city_id
		left join country ct on ct.country_id = c.country_id
		Where ticket_name LIKe concat('%', #{search_word}, '%')
		<if test="start != 0">
			LIMIT ${start-1}, #{end}
		</if>
	</select> 

	<select id="yqHotelList" parameterType="Hotel" resultType="Hotel">
		select h.hotel_id, c.city_name, c.city_id, ct.country_name, ct.country_id, h.hotel_kor, r.room_id, rd.room_detail_id, r.hotel_id, r.room_type, r.room_name, min(rd.room_price) room_min_price, h_img_path, 
		(SELECT FORMAT(IFNULL(AVG(r.rv_rating), 0 ), 1) FROM review r WHERE r.rv_real_id = h.hotel_id) hotel_score, hotel_grade,
		 (select count(*) FROM review r WHERE r.rv_real_id = h.hotel_id) review_cnt,
		 (SELECT basket_id FROM basket WHERE mem_id = #{mem_id} and basket_ref_id = h.hotel_id) chk
		FROM room r 
		left join room_detail rd on r.room_id = rd.room_id 
		left join hotel_image hi on r.hotel_id = hi.hotel_id 
		left join hotel h on r.hotel_id = h.hotel_id 
		left join city c on c.city_id = h.city_id
		left join country ct on ct.country_id = c.country_id
		group by h.hotel_id
		HAving hotel_kor LIKe concat('%', #{search_word}, '%')
		<if test="start != 0">
			LIMIT ${start-1}, #{end}
		</if>
	</select>

	<!-- 패키지 + 패키지 이미지 + 패키지 디테일 가져오기 -->
	<select id="yqPkageList" parameterType="PkageDTO" resultType="PkageDTO">
		SELECT p.pkage_id, c.city_id, pkage_name, pkage_info, pkage_soldCnt, pi.pkage_Img_path, min_price, pkage_gubun, pkage_dt_thema, city_name, period, ct.country_name,
		(SELECT FORMAT( IFNULL ( AVG(r.rv_rating), 0 ), 1) FROM review r WHERE r.rv_real_id = p.pkage_id) pkage_score,
		(select count(*) FROM review r WHERE r.rv_real_id = p.pkage_id) review_cnt,
		(SELECT basket_id FROM basket WHERE mem_id = #{mem_id} and basket_ref_id = p.pkage_id) chk
		FROM package p left join package_image pi on p.pkage_id = pi.pkage_id 
		left join (select distinct pkage_id, pkage_dt_thema, min(pkage_dt_Aprice) min_price, datediff(pkage_dt_endDay, pkage_dt_startDay) + 1 period from package_detail group by pkage_id) pd on p.pkage_id = pd.pkage_id 
		left join city c on c.city_id = p.city_id
		left join country ct on c.country_id = ct.country_id
		Where pkage_name LIKe concat('%', #{search_word}, '%')
		<if test="start != 0">
			LIMIT ${start-1}, #{end}
		</if>
	</select>
	
	<select id="yqFilteredPkageList" parameterType="Map" resultType="PkageDTO">
		SELECT p.pkage_id, c.city_id, pkage_name, pkage_info, pkage_soldCnt, pi.pkage_Img_path, min_price, pkage_gubun, pd.pkage_dt_thema, city_name, period, ct.country_name,
		(SELECT FORMAT( IFNULL ( AVG(r.rv_rating), 0 ), 1) FROM review r WHERE r.rv_real_id = p.pkage_id) pkage_score,
		(select count(*) FROM review r WHERE r.rv_real_id = p.pkage_id) review_cnt,
		(SELECT basket_id FROM basket WHERE mem_id = #{mem_id} and basket_ref_id = p.pkage_id) chk
		FROM package p 
        left join package_image pi on p.pkage_id = pi.pkage_id 
		left join (select distinct pkage_id, pkage_dt_thema, min(pkage_dt_Aprice) min_price, datediff(pkage_dt_endDay, pkage_dt_startDay) + 1 period from package_detail group by pkage_id) pd on p.pkage_id = pd.pkage_id 
		left join city c on c.city_id = p.city_id
		left join country ct on c.country_id = ct.country_id
		Where pkage_name LIKe concat('%', #{pkageDTO.search_word}, '%') 
		<if test="!existChkBox.equals('')">
			AND
		</if>
		<foreach collection="check" item="filter"  open="" close="" separator="or">
			<if test="filter == 'trvlDayCnt-0'">
				 period = 2
			</if>
			<if test="filter == 'trvlDayCnt-1'">
				 period = 3
			</if>
			<if test="filter == 'trvlDayCnt-2'">
				 period = 4
			</if>
			<if test="filter == 'trvlDayCnt-3'">
				 period = 5
			</if>
			<if test="filter == 'adtMinAmt-0'">
				<![CDATA[
				 min_price >= 0 AND min_price <= 200000
				]]>
			</if>
			<if test="filter == 'adtMinAmt-1'">
				<![CDATA[
				 min_price > 210000 AND min_price <= 500000
				]]>
			</if>
			<if test="filter == 'adtMinAmt-2'">
				<![CDATA[
				 min_price > 510000 AND min_price <= 700000
				]]>
			</if>
			<if test="filter == 'adtMinAmt-3'">
				<![CDATA[
				 min_price > 710000 AND min_price <= 2000000
				]]>
			</if>
			<if test="filter == 'kind_0'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_1'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_2'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_3'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_4'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_5'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_6'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
		</foreach>
		<!-- <if test="start != 0">
			LIMIT ${start-1}, #{end}
		</if> -->
	</select>

	<select id="yqFilteredHotelList" parameterType="Map" resultType="Hotel">
		
		
		<foreach collection="check" item="filter"  open="" close="" separator="or">
			<if test="filter == 'fprice_0'">
				<![CDATA[
				 min_price >= 0 AND min_price <= 200000
				]]>
			</if>
			<if test="filter == 'fprice_1'">
				<![CDATA[
				 min_price > 210000 AND min_price <= 500000
				]]>
			</if>
			<if test="filter == 'fprice_2'">
				<![CDATA[
				 min_price > 510000 AND min_price <= 700000
				]]>
			</if>
			<if test="filter == 'fprice_3'">
				<![CDATA[
				 min_price > 710000 AND min_price <= 2000000
				]]>
			</if>
			<if test="filter == 'trvlDayCnt-0'">
				 period = 2
			</if>
			<if test="filter == 'trvlDayCnt-1'">
				 period = 3
			</if>
			<if test="filter == 'trvlDayCnt-2'">
				 period = 4
			</if>
			<if test="filter == 'trvlDayCnt-3'">
				 period = 5
			</if>
			<if test="filter == 'kind_0'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_1'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_2'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_3'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_4'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_5'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
			<if test="filter == 'kind_6'">
				<![CDATA[
				 min_price > 1410000 AND min_price <= 11750000
				]]>
			</if>
		</foreach>
			<if test="radioCheck == 'buy_order'">
				 ORDER BY min_price desc kkkk
			</if>
			<if test="radioCheck == 'high_score'">
				ORDER BY pkage_score desc
			</if>
			<if test="radioCheck == 'row_price'">
				ORDER BY min_price desc
			</if>
			<if test="radioCheck == 'fastest_go'">
				ORDER BY min_price
			</if>
		<if test="start != null">
			LIMIT ${start-1}, #{end}
		</if>
	</select>

	<select id="yqSelectLike" parameterType="CategoryDTOVO" resultType="Integer">
		select count(*) from basket where mem_id = #{mem_id} AND basket_ref_id = #{basket_ref_id}
	</select>

	<insert id="yqInsertLike" parameterType="CategoryDTOVO">
		insert into basket values(null, #{mem_id}, #{basket_ref_id})
	</insert>
	
	<delete id="yqRemoveLike" parameterType="CategoryDTOVO">
		DELETE FROM basket where mem_id = #{mem_id} AND basket_ref_id = #{basket_ref_id}
	</delete>
	
	<select id="yqCallLike" parameterType="BasketDTO" resultType="BasketDTO">
		select * from basket where mem_id = #{mem_id} AND basket_ref_id = #{basket_ref_id}
	</select>
	
	<select id="yqSearchWord" resultType="Search">
		select * from search order by search_count desc
	</select>
	
	<insert id="yqInsertNewSWord" parameterType="Search">
		insert into search values(#{search_word}, 1, sysdate())
	</insert>
	
	<update id="yqUpdateSCount" parameterType="Search">
		update search set search_count = search_count + 1 where search_word = #{search_word}
	</update>
	
	<select id="yqAutoComplete" parameterType="map" resultType="map">
		SELECT city_name FROM city Where city_name LIKe concat('%', #{search_word}, '%')
		union
		select country_name From country WHERE country_name LIKe concat('%', #{search_word}, '%')
		union
		select pkage_name From package WHERE pkage_name LIKe concat('%', #{search_word}, '%')
		union
		select hotel_kor from hotel WHERE hotel_kor LIKe concat('%', #{search_word}, '%')
		union
		select ticket_name from ticket_detail WHERE ticket_name LIKe concat('%', #{search_word}, '%')
	</select>
	
	<insert id="yqRecentSearchInsert" parameterType="RecentSearchDTO">
		Insert Into recent_search Values(#{search_word}, #{mem_id}, sysdate())
	</insert>
	
	<update id="yqUpdateRecentSysdate" parameterType="RecentSearchDTO">
		Update recent_search SET search_time = sysdate() WHERE search_word = #{search_word} AND mem_id = #{mem_id}
	</update>
	
	<select id="yqRecentSearchSelect" parameterType="RecentSearchDTO" resultType="RecentSearchDTO">
		select search_word, m.mem_id, rs.search_time
		FROM recent_search rs right join member m on m.mem_id = rs.mem_id
		WHERE m.mem_id = #{mem_id}
		ORDER BY search_time desc
	</select>
	
	<select id="yqNormalRecentSearch" resultType="RecentSearchDTO">
		select search_word from recent_search order by search_time desc
	</select>
	
	<select id="yqCheckLike" parameterType="BasketDTO" resultType="BasketDTO">
		select ifnull(basket_ref_id, 0) selected_id From basket Where mem_id = #{mem_id}
	</select>
	
</mapper>